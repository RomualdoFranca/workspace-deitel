package capitulo09.exemplo.entities;

public class BasePlusCommissionEmployee extends CommissionEmployee {

	private double baseSalary;

	public BasePlusCommissionEmployee(String firstName, String lastName, String socialSecurityNumber,
			double grossSales, double commissionRate, double baseSalary) {
		
		// chamada explicita para o contrutor CommissionEmployee da superclasse
		//sintaxe de chamada de construtor da superclasse
		//deve ser a primeira instrucao do costrutor
		//deve ser chamado explicitamenta por a superclasse nao tem um construtor sem argumentos que possa ser chamado 
		//implicitamente
		super(firstName, lastName, socialSecurityNumber, grossSales, commissionRate);

		if (baseSalary < 0.0)
			throw new IllegalArgumentException("Base salary must be >= 0.0");

		this.baseSalary = baseSalary;

	}
	//configura o salario-base
	public void setBaseSalary(double baseSalary) {
		if(baseSalary < 0.0) 
			throw new IllegalArgumentException("Base salary must be >= 0.0");
		this.baseSalary = baseSalary;
	}
	public double getBaseSalary() {
		return baseSalary;
	}
	
	//ao sobrescrever esse metodo, para que se tenha acesso as variaveis da superclasse, o modificador de acesso
	//não pode ser private na super classe. As variáveis da superclasse que são usadas nesse metodo devem receber o
	//modificador de acesso 'protected
	@Override
	public double earnings() {
		return getBaseSalary() + super.earnings();
	}
	
	//retorna a representaçao de String de BasePlusCommissionEmployee
	@Override
	public String toString() {
		return String.format("%s: %s %s%n%s: %.2f ", "base-salaried", super.toString(),"base salary", getBaseSalary());

	}

}
