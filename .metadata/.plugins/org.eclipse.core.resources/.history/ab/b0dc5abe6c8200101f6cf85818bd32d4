package com.deitel.java.capitulo09.entities;

//representa um empregado que recebeu um percentual das vendas brutas
public class CommissionEmployee extends Object {
	private final String firstName;
	private final String lastName;
	private final String socialSecurityNumber;
	private double grossSales; // vendas brutas semanais
	private double commissionRate; // percentagem de comissao

	// construtor com 5 argumentos
	public CommissionEmployee(String firstName, String lastName, String socialSecurityNumber, double grossSales,
			double commissionRate) {

		// a chamada implicita para o construtor padrao de Object ocorre aqui

		// se grossSales invalido, lança um exceção
		if (grossSales < 0.0)
			throw new IllegalArgumentException("Gross sales must be >= 0.0");

		// se commisionRate invalido, lança um exceção
		if (commissionRate <= 0.0 || commissionRate >= 1.0)
			throw new IllegalArgumentException("Commission rate must be > 0.0  and < 1.0");

		this.firstName = firstName;
		this.lastName = lastName;
		this.socialSecurityNumber = socialSecurityNumber;
		this.grossSales = grossSales;
		this.commissionRate = commissionRate;
	}// fim do construtor

	public String getFirstName() {
		return firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public String getSocialSecurityNumber() {
		return socialSecurityNumber;
	}

	//configura a quantidade de vendas brutas
	public void setGrossSales(double grossSales) {
		if (grossSales < 0.0)
			throw new IllegalArgumentException("Gross sales must be >= 0.0");

		this.grossSales = grossSales;
	}

	public double getGrossSales() {
		return grossSales;
	}
	
	//configura a taxa de comissao
	public void setCommissionRate(double commissionRate) {
		if (commissionRate <= 0.0 || commissionRate >= 1.0)
			throw new IllegalArgumentException("Commission rate must be > 0.0  and < 1.0");
		this.commissionRate = commissionRate;
	}

	public double getCommissionRate() {
		return commissionRate;
	}
	
	//calcula lucros
	public double earnings() {
		return commissionRate * grossSales;
	}
	
	@Override
	public String toString() {
		return String.format("%s: %s %s%n%s: %s%n%s: %.2f%n%s: %.2f ",
				"commission employee", firstName, lastName,
				"social security number", socialSecurityNumber,
				"gross sale", grossSales,
				"commission rate", commissionRate);
		
	}

}//fim da classe
